declare namespace Enum
{
	export enum MatchGroup
	{
		Auto = 0,
		WestUS = 1,
		EastUS = 2,
		WestEurope = 4,
		SouthWestAsia = 8,
		UNK1 = 16,
		Brasil = 32,
		Argentina = 64,
		Russia = 128,
		EastEurope = 256,
		Australia = 512,
		SouthAfrica = 1024,
		ChinaTCShanghai = 2048,
		ChinaUC = 4096,
		Dubai = 8192,
		Chile = 16384,
		Peru = 32768,
		India = 65536,
		ChinaTCGuangdong = 131072,
		ChinaTCZhejiang = 262144,
		Japan = 524288,
		ChinaTCWuhan = 1048576,
		ChinaUC2 = 33554432,
	}

	export enum LaneSelectionFlags
	{
		SafeLane = 1,
		OffLane = 2,
		MidLane = 4,
		SoftSupport = 8,
		HardSupport = 16
	}

	export enum GCResponseStatus
	{
		Ok = 0,
		Timeout = 1,
		ParseFailed = 2
	}

	export enum MatchType
	{
		MATCH_TYPE_CASUAL = 0,
		MATCH_TYPE_COOP_BOTS = 1,
		MATCH_TYPE_LEGACY_TEAM_RANKED = 2,
		MATCH_TYPE_LEGACY_SOLO_QUEUE = 3,
		MATCH_TYPE_COMPETITIVE = 4,
		MATCH_TYPE_WEEKEND_TOURNEY = 5,
		MATCH_TYPE_CASUAL_1V1 = 6,
		MATCH_TYPE_EVENT = 7,
		MATCH_TYPE_SEASONAL_RANKED = 8,
		MATCH_TYPE_LOWPRI_DEPRECATED = 9,
		MATCH_TYPE_STEAM_GROUP = 10,
		MATCH_TYPE_MUTATION = 11,
		MATCH_TYPE_COACHES_CHALLENGE = 12,
		MATCH_TYPE_GAUNTLET = 13,
		MATCH_TYPE_NEW_PLAYER_POOL = 14
	}

	// Player

	export enum PlayerOrderIssuer
	{
		DOTA_ORDER_ISSUER_SELECTED_UNITS = 0,
		DOTA_ORDER_ISSUER_CURRENT_UNIT_ONLY = 1,
		DOTA_ORDER_ISSUER_HERO_ONLY = 2,
		DOTA_ORDER_ISSUER_PASSED_UNIT_ONLY = 3
	}

	export enum UnitOrder
	{
		DOTA_UNIT_ORDER_NONE = 0,
		DOTA_UNIT_ORDER_MOVE_TO_POSITION = 1,
		DOTA_UNIT_ORDER_MOVE_TO_TARGET = 2,
		DOTA_UNIT_ORDER_ATTACK_MOVE = 3,
		DOTA_UNIT_ORDER_ATTACK_TARGET = 4,
		DOTA_UNIT_ORDER_CAST_POSITION = 5,
		DOTA_UNIT_ORDER_CAST_TARGET = 6,
		DOTA_UNIT_ORDER_CAST_TARGET_TREE = 7,
		DOTA_UNIT_ORDER_CAST_NO_TARGET = 8,
		DOTA_UNIT_ORDER_CAST_TOGGLE = 9,
		DOTA_UNIT_ORDER_HOLD_POSITION = 10,
		DOTA_UNIT_ORDER_TRAIN_ABILITY = 11,
		DOTA_UNIT_ORDER_DROP_ITEM = 12,
		DOTA_UNIT_ORDER_GIVE_ITEM = 13,
		DOTA_UNIT_ORDER_PICKUP_ITEM = 14,
		DOTA_UNIT_ORDER_PICKUP_RUNE = 15,
		DOTA_UNIT_ORDER_PURCHASE_ITEM = 16,
		DOTA_UNIT_ORDER_SELL_ITEM = 17,
		DOTA_UNIT_ORDER_DISASSEMBLE_ITEM = 18,
		DOTA_UNIT_ORDER_MOVE_ITEM = 19,
		DOTA_UNIT_ORDER_CAST_TOGGLE_AUTO = 20,
		DOTA_UNIT_ORDER_STOP = 21,
		DOTA_UNIT_ORDER_TAUNT = 22,
		DOTA_UNIT_ORDER_BUYBACK = 23,
		DOTA_UNIT_ORDER_GLYPH = 24,
		DOTA_UNIT_ORDER_EJECT_ITEM_FROM_STASH = 25,
		DOTA_UNIT_ORDER_CAST_RUNE = 26,
		DOTA_UNIT_ORDER_PING_ABILITY = 27,
		DOTA_UNIT_ORDER_MOVE_TO_DIRECTION = 28,
		DOTA_UNIT_ORDER_PATROL = 29,
		DOTA_UNIT_ORDER_VECTOR_TARGET_POSITION = 30,
		DOTA_UNIT_ORDER_RADAR = 31,
		DOTA_UNIT_ORDER_SET_ITEM_COMBINE_LOCK = 32,
		DOTA_UNIT_ORDER_CONTINUE = 33,
		DOTA_UNIT_ORDER_VECTOR_TARGET_CANCELED = 34,
		DOTA_UNIT_ORDER_CAST_RIVER_PAINT = 35,
		DOTA_UNIT_ORDER_PREGAME_ADJUST_ITEM_ASSIGNMENT = 36,
		DOTA_UNIT_ORDER_DROP_ITEM_AT_FOUNTAIN = 37,
		DOTA_UNIT_ORDER_TAKE_ITEM_FROM_NEUTRAL_ITEM_STASH = 38,
		DOTA_UNIT_ORDER_MOVE_RELATIVE = 39,
		DOTA_UNIT_ORDER_CAST_TOGGLE_ALT = 40
	}

	export enum ForcedType
	{
		None = 0,
		Alt = 1,
		Minimap = 2,
		Portrait = 3,
		OnCursor = 4
	}

	export enum QueuePriority
	{
		Normal = 0,
		High = 1
	}

	export enum OrderQueueBehavior
	{
		DOTA_ORDER_QUEUE_DEFAULT = 0,
		DOTA_ORDER_QUEUE_NEVER = 1,
		DOTA_ORDER_QUEUE_ALWAYS = 2,
	}

	// GameRules

	export enum GameState
	{
		INIT = 0,
		WAIT_FOR_PLAYERS_TO_LOAD = 1,
		HERO_SELECTION = 2,
		STRATEGY_TIME = 3,
		PRE_GAME = 4,
		GAME_IN_PROGRESS = 5,
		POST_GAME = 6,
		DISCONNECT = 7,
		TEAM_SHOWCASE = 8,
		CUSTOM_GAME_SETUP = 9,
		WAIT_FOR_MAP_TO_LOAD = 10,
		SCENARIO_SETUP = 11,
		PLAYER_DRAFT = 12,
		LAST = 13
	}

	// Menu

	export enum MenuOptionType
	{
		None = 0,
		Folder = 1,
		Toggle = 2,
		ToggleBlock = 3,
		Slider = 4,
		MultiSelect = 5,
		ComboBox = 6,
		ColorPicker = 7,
		KeyBind = 8,
		Button = 9,
		InputBox = 10,
		PrioritySelect = 11,
		MultiComboBox = 12,
		Label = 13,
		HeroSelect = 14
	}

	export enum WheelStopReason
	{
		Toggle = 0,
		Order = 1,
		Click = 2
	}

	export enum KeyEvent
	{
		SCROLL_DOWN = 0,
		SCROLL_UP = 1,
		KEY_DOWN = 2,
		KEY_UP = 3
	}

	export enum ButtonCode
	{
		BUTTON_CODE_INVALID,
		BUTTON_CODE_NONE,
		KEY_FIRST,
		KEY_NONE,
		KEY_0,
		KEY_1,
		KEY_2,
		KEY_3,
		KEY_4,
		KEY_5,
		KEY_6,
		KEY_7,
		KEY_8,
		KEY_9,
		KEY_A,
		KEY_B,
		KEY_C,
		KEY_D,
		KEY_E,
		KEY_F,
		KEY_G,
		KEY_H,
		KEY_I,
		KEY_J,
		KEY_K,
		KEY_L,
		KEY_M,
		KEY_N,
		KEY_O,
		KEY_P,
		KEY_Q,
		KEY_R,
		KEY_S,
		KEY_T,
		KEY_U,
		KEY_V,
		KEY_W,
		KEY_X,
		KEY_Y,
		KEY_Z,
		KEY_PAD_0,
		KEY_PAD_1,
		KEY_PAD_2,
		KEY_PAD_3,
		KEY_PAD_4,
		KEY_PAD_5,
		KEY_PAD_6,
		KEY_PAD_7,
		KEY_PAD_8,
		KEY_PAD_9,
		KEY_PAD_DIVIDE,
		KEY_PAD_MULTIPLY,
		KEY_PAD_MINUS,
		KEY_PAD_PLUS,
		KEY_PAD_ENTER,
		KEY_PAD_DECIMAL,
		KEY_LMAO_EMPTY,
		KEY_LBRACKET,
		KEY_RBRACKET,
		KEY_SEMICOLON,
		KEY_APOSTROPHE,
		KEY_BACKQUOTE,
		KEY_COMMA,
		KEY_PERIOD,
		KEY_SLASH,
		KEY_BACKSLASH,
		KEY_MINUS,
		KEY_EQUAL,
		KEY_ENTER,
		KEY_SPACE,
		KEY_BACKSPACE,
		KEY_TAB,
		KEY_CAPSLOCK,
		KEY_NUMLOCK,
		KEY_ESCAPE,
		KEY_SCROLLLOCK,
		KEY_INSERT,
		KEY_DELETE,
		KEY_HOME,
		KEY_END,
		KEY_PAGEUP,
		KEY_PAGEDOWN,
		KEY_BREAK,
		KEY_LSHIFT,
		KEY_RSHIFT,
		KEY_LALT,
		KEY_RALT,
		KEY_LCONTROL,
		KEY_RCONTROL,
		KEY_LWIN,
		KEY_RWIN,
		KEY_APP,
		KEY_UP,
		KEY_LEFT,
		KEY_DOWN,
		KEY_RIGHT,
		KEY_F1,
		KEY_F2,
		KEY_F3,
		KEY_F4,
		KEY_F5,
		KEY_F6,
		KEY_F7,
		KEY_F8,
		KEY_F9,
		KEY_F10,
		KEY_F11,
		KEY_F12,
		KEY_F13,
		KEY_F14,
		KEY_F15,
		KEY_F16,
		KEY_F17,
		KEY_F18,
		KEY_F19,
		KEY_F20,
		KEY_F21,
		KEY_F22,
		KEY_F23,
		KEY_F24,
		KEY_CAPSLOCKTOGGLE,
		KEY_NUMLOCKTOGGLE,
		KEY_SCROLLLOCKTOGGLE,
		KEY_LAST,
		KEY_COUNT,
		MOUSE_FIRST,
		MOUSE_LEFT,
		MOUSE_RIGHT,
		MOUSE_MIDDLE,
		MOUSE_4,
		MOUSE_5,
		MOUSE_WHEEL_UP,
		MOUSE_WHEEL_DOWN,
		MOUSE_LAST,
		MOUSE_COUNT,
		JOYSTICK_FIRST,
		JOYSTICK_FIRST_BUTTON
	}

	export enum ContentAlign
	{
		Left = 1,
		CenterX = 2,
		Right = 4,

		Bottom = 8,
		LeftBottom = 9,
		CenterXBottom = 10,
		RightBottom = 12,
		CenterY = 16,
		LeftCenterY = 17,
		CenterXY = 18,
		RightCenterY = 20,
		Top = 32,
		LeftTop = 33,
		CenterXTop = 34,
		RightTop = 36
	}

	export enum TeamType
	{
		TEAM_ENEMY = 1,
		TEAM_FRIEND = 2,
		TEAM_BOTH = 3
	}

	// EntitySystem

	export enum UnitType
	{
		DOTA_UNIT_NONE = 0,
		DOTA_UNIT_HERO = 1,
		DOTA_UNIT_STRUCTURE = 16,
		DOTA_UNIT_TOWER = 20, // DOTA_UNIT_STRUCTURE | 4
		DOTA_UNIT_ANCIENT = 48, // 32 | DOTA_UNIT_STRUCTURE
		DOTA_UNIT_BARRACKS = 80, // 64 | DOTA_UNIT_STRUCTURE
		DOTA_UNIT_CREEP = 128,
		DOTA_UNIT_COURIER = 256,
		DOTA_UNIT_SHOPKEEP = 528, // 512 | DOTA_UNIT_STRUCTURE
		DOTA_UNIT_LANE_CREEP = 1152, // 1024 | DOTA_UNIT_CREEP
		DOTA_UNIT_ROSHAN = 2176 // 2048 | DOTA_UNIT_CREEP
	}

	export enum ModifierState
	{
		MODIFIER_STATE_ROOTED = 0,
		MODIFIER_STATE_DISARMED = 1,
		MODIFIER_STATE_ATTACK_IMMUNE = 2,
		MODIFIER_STATE_SILENCED = 3,
		MODIFIER_STATE_MUTED = 4,
		MODIFIER_STATE_STUNNED = 5,
		MODIFIER_STATE_HEXED = 6,
		MODIFIER_STATE_INVISIBLE = 7,
		MODIFIER_STATE_INVULNERABLE = 8,
		MODIFIER_STATE_MAGIC_IMMUNE = 9,
		MODIFIER_STATE_PROVIDES_VISION = 10,
		MODIFIER_STATE_NIGHTMARED = 11,
		MODIFIER_STATE_BLOCK_DISABLED = 12,
		MODIFIER_STATE_EVADE_DISABLED = 13,
		MODIFIER_STATE_UNSELECTABLE = 14,
		MODIFIER_STATE_CANNOT_TARGET_ENEMIES = 15,
		MODIFIER_STATE_CANNOT_TARGET_BUILDINGS = 16,
		MODIFIER_STATE_CANNOT_MISS = 17,
		MODIFIER_STATE_SPECIALLY_DENIABLE = 18,
		MODIFIER_STATE_FROZEN = 19,
		MODIFIER_STATE_COMMAND_RESTRICTED = 20,
		MODIFIER_STATE_NOT_ON_MINIMAP = 21,
		MODIFIER_STATE_LOW_ATTACK_PRIORITY = 22,
		MODIFIER_STATE_NO_HEALTH_BAR = 23,
		MODIFIER_STATE_NO_HEALTH_BAR_FOR_ENEMIES = 24,
		MODIFIER_STATE_NO_HEALTH_BAR_FOR_OTHER_PLAYERS = 25,
		MODIFIER_STATE_FLYING = 26,
		MODIFIER_STATE_NO_UNIT_COLLISION = 27,
		MODIFIER_STATE_NO_TEAM_MOVE_TO = 28,
		MODIFIER_STATE_NO_TEAM_SELECT = 29,
		MODIFIER_STATE_PASSIVES_DISABLED = 30,
		MODIFIER_STATE_DOMINATED = 31,
		MODIFIER_STATE_BLIND = 32,
		MODIFIER_STATE_OUT_OF_GAME = 33,
		MODIFIER_STATE_FAKE_ALLY = 34,
		MODIFIER_STATE_FLYING_FOR_PATHING_PURPOSES_ONLY = 35,
		MODIFIER_STATE_TRUESIGHT_IMMUNE = 36,
		MODIFIER_STATE_UNTARGETABLE = 37,
		MODIFIER_STATE_UNTARGETABLE_ALLIED = 38,
		MODIFIER_STATE_UNTARGETABLE_ENEMY = 39,
		MODIFIER_STATE_UNTARGETABLE_SELF = 40,
		MODIFIER_STATE_IGNORING_MOVE_AND_ATTACK_ORDERS = 41,
		MODIFIER_STATE_ALLOW_PATHING_THROUGH_TREES = 42,
		MODIFIER_STATE_NOT_ON_MINIMAP_FOR_ENEMIES = 43,
		MODIFIER_STATE_UNSLOWABLE = 44,
		MODIFIER_STATE_TETHERED = 45,
		MODIFIER_STATE_IGNORING_STOP_ORDERS = 46,
		MODIFIER_STATE_FEARED = 47,
		MODIFIER_STATE_TAUNTED = 48,
		MODIFIER_STATE_CANNOT_BE_MOTION_CONTROLLED = 49,
		MODIFIER_STATE_FORCED_FLYING_VISION = 50,
		MODIFIER_STATE_ATTACK_ALLIES = 51,
		MODIFIER_STATE_ALLOW_PATHING_THROUGH_CLIFFS = 52,
		MODIFIER_STATE_ALLOW_PATHING_THROUGH_FISSURE = 53,
		MODIFIER_STATE_SPECIALLY_UNDENIABLE = 54,
		MODIFIER_STATE_ALLOW_PATHING_THROUGH_OBSTRUCTIONS = 55,
		MODIFIER_STATE_DEBUFF_IMMUNE = 56,
		MODIFIER_STATE_NO_INVISIBILITY_VISUALS = 57,
		MODIFIER_STATE_ALLOW_PATHING_THROUGH_BASE_BLOCKER = 58,
		MODIFIER_STATE_LAST = 59
	}

	export enum PowerTreadsAttributes
	{
		DOTA_PT_ATTRIBUTE_STRENGTH = 0,
		DOTA_PT_ATTRIBUTE_INTELLECT = 1,
		DOTA_PT_ATTRIBUTE_AGILITY = 2
	}

	export enum ShopType
	{
		DOTA_SHOP_HOME = 0,
		DOTA_SHOP_SIDE = 1,
		DOTA_SHOP_SECRET = 2,
		DOTA_SHOP_GROUND = 3,
		DOTA_SHOP_SIDE2 = 4,
		DOTA_SHOP_SECRET2 = 5,
		DOTA_SHOP_CUSTOM = 6,
		DOTA_SHOP_NONE = 7
	}

	export enum Attributes
	{
		DOTA_ATTRIBUTE_STRENGTH = 0,
		DOTA_ATTRIBUTE_AGILITY = 1,
		DOTA_ATTRIBUTE_INTELLECT = 2
	}

	export enum Talents
	{
		TALENT_1 = 1,
		TALENT_2 = 2,
		TALENT_3 = 4,
		TALENT_4 = 8,
		TALENT_5 = 16,
		TALENT_6 = 32,
		TALENT_7 = 64,
		TALENT_8 = 128,
	}

	export enum CourierState
	{
		COURIER_STATE_INIT = -1,
		COURIER_STATE_IDLE = 0,
		COURIER_STATE_AT_BASE = 1,
		COURIER_STATE_MOVING = 2,
		COURIER_STATE_DELIVERING_ITEMS = 3,
		COURIER_STATE_RETURNING_TO_BASE = 4,
		COURIER_STATE_DEAD = 5,
		COURIER_NUM_STATES = 6,
	}

	export enum AttackType
	{
		DOTA_COMBAT_CLASS_ATTACK_HERO = 0,
		DOTA_COMBAT_CLASS_ATTACK_BASIC = 1,
		DOTA_COMBAT_CLASS_ATTACK_PIERCE = 2,
		DOTA_COMBAT_CLASS_ATTACK_SIEGE = 3,
	}

	export enum ArmorType
	{
		DOTA_COMBAT_CLASS_DEFEND_STRUCTURE = 0,
		DOTA_COMBAT_CLASS_DEFEND_HERO = 1,
		DOTA_COMBAT_CLASS_DEFEND_BASIC = 2,
	}

	// NetChannel

	export enum Flow
	{
		FLOW_OUTGOING = 0,
		FLOW_INCOMING = 1,
		MAX_FLOWS = 2,
	}

	// Particle

	export enum ParticleAttachment
	{
		PATTACH_INVALID = -1,
		PATTACH_ABSORIGIN = 0,
		PATTACH_ABSORIGIN_FOLLOW = 1,
		PATTACH_CUSTOMORIGIN = 2,
		PATTACH_CUSTOMORIGIN_FOLLOW = 3,
		PATTACH_POINT = 4,
		PATTACH_POINT_FOLLOW = 5,
		PATTACH_EYES_FOLLOW = 6,
		PATTACH_OVERHEAD_FOLLOW = 7,
		PATTACH_WORLDORIGIN = 8,
		PATTACH_ROOTBONE_FOLLOW = 9,
		PATTACH_RENDERORIGIN_FOLLOW = 10,
		PATTACH_MAIN_VIEW = 11,
		PATTACH_WATERWAKE = 12,
		PATTACH_CENTER_FOLLOW = 13,
		PATTACH_CUSTOM_GAME_STATE_1 = 14,
		MAX_PATTACH_TYPES = 15
	}

	// Ability

	export enum AbilityTypes
	{
		ABILITY_TYPE_BASIC = 0,
		ABILITY_TYPE_ULTIMATE = 1,
		ABILITY_TYPE_ATTRIBUTES = 2,
		ABILITY_TYPE_HIDDEN = 3
	}

	export const AbilityBehavior: {
		DOTA_ABILITY_BEHAVIOR_NONE: bigint; // 0n
		DOTA_ABILITY_BEHAVIOR_HIDDEN: bigint; // 1n << 0n = 1n
		DOTA_ABILITY_BEHAVIOR_PASSIVE: bigint; // 1n << 1n = 2n
		DOTA_ABILITY_BEHAVIOR_NO_TARGET: bigint; // 1n << 2n = 4n
		DOTA_ABILITY_BEHAVIOR_UNIT_TARGET: bigint; // 1n << 3n = 8n
		DOTA_ABILITY_BEHAVIOR_POINT: bigint; // 1n << 4n = 16n
		DOTA_ABILITY_BEHAVIOR_AOE: bigint; // 1n << 5n = 32n
		DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE: bigint; // 1n << 6n
		DOTA_ABILITY_BEHAVIOR_CHANNELLED: bigint; // 1n << 7n
		DOTA_ABILITY_BEHAVIOR_ITEM: bigint; // 1n << 8n
		DOTA_ABILITY_BEHAVIOR_TOGGLE: bigint; // 1n << 9n
		DOTA_ABILITY_BEHAVIOR_DIRECTIONAL: bigint; // 1n << 10n
		DOTA_ABILITY_BEHAVIOR_IMMEDIATE: bigint; // 1n << 11n
		DOTA_ABILITY_BEHAVIOR_AUTOCAST: bigint; // 1n << 12n
		DOTA_ABILITY_BEHAVIOR_OPTIONAL_UNIT_TARGET: bigint; // 1n << 13n
		DOTA_ABILITY_BEHAVIOR_OPTIONAL_POINT: bigint; // 1n << 14n
		DOTA_ABILITY_BEHAVIOR_OPTIONAL_NO_TARGET: bigint; // 1n << 15n
		DOTA_ABILITY_BEHAVIOR_AURA: bigint; // 1n << 16n
		DOTA_ABILITY_BEHAVIOR_ATTACK: bigint; // 1n << 17n
		DOTA_ABILITY_BEHAVIOR_DONT_RESUME_MOVEMENT: bigint; // 1n << 18n
		DOTA_ABILITY_BEHAVIOR_ROOT_DISABLES: bigint; // 1n << 19n
		DOTA_ABILITY_BEHAVIOR_UNRESTRICTED: bigint; // 1n << 20n
		DOTA_ABILITY_BEHAVIOR_IGNORE_PSEUDO_QUEUE: bigint; // 1n << 21n
		DOTA_ABILITY_BEHAVIOR_IGNORE_CHANNEL: bigint; // 1n << 22n
		DOTA_ABILITY_BEHAVIOR_DONT_CANCEL_MOVEMENT: bigint; // 1n << 23n
		DOTA_ABILITY_BEHAVIOR_DONT_ALERT_TARGET: bigint; // 1n << 24n
		DOTA_ABILITY_BEHAVIOR_DONT_RESUME_ATTACK: bigint; // 1n << 25n
		DOTA_ABILITY_BEHAVIOR_NORMAL_WHEN_STOLEN: bigint; // 1n << 26n
		DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING: bigint; // 1n << 27n
		DOTA_ABILITY_BEHAVIOR_RUNE_TARGET: bigint; // 1n << 28n
		DOTA_ABILITY_BEHAVIOR_DONT_CANCEL_CHANNEL: bigint; // 1n << 29n
		DOTA_ABILITY_BEHAVIOR_VECTOR_TARGETING: bigint; // 1n << 30n
		DOTA_ABILITY_BEHAVIOR_LAST_RESORT_POINT: bigint; // 1n << 31n
		DOTA_ABILITY_BEHAVIOR_CAN_SELF_CAST: bigint; // 1n << 32n
		DOTA_ABILITY_BEHAVIOR_SHOW_IN_GUIDES: bigint; // 1n << 33n
		DOTA_ABILITY_BEHAVIOR_SKIP_FOR_KEYBINDS: bigint; // 1n << 42n
	};

	type AbilityBehavior = bigint;

	export enum TargetTeam
	{
		DOTA_UNIT_TARGET_TEAM_NONE = 0,
		DOTA_UNIT_TARGET_TEAM_FRIENDLY = 1,
		DOTA_UNIT_TARGET_TEAM_ENEMY = 2,
		DOTA_UNIT_TARGET_TEAM_CUSTOM = 3,
		DOTA_UNIT_TARGET_TEAM_BOTH = 4
	}

	export enum TargetType
	{
		DOTA_UNIT_TARGET_NONE = 0,
		DOTA_UNIT_TARGET_HERO = 1,
		DOTA_UNIT_TARGET_CREEP = 2,
		DOTA_UNIT_TARGET_BUILDING = 4,
		DOTA_UNIT_TARGET_COURIER = 16,
		DOTA_UNIT_TARGET_BASIC = 18,
		DOTA_UNIT_TARGET_OTHER = 32,
		DOTA_UNIT_TARGET_ALL = 55,
		DOTA_UNIT_TARGET_TREE = 64,
		DOTA_UNIT_TARGET_CUSTOM = 128
	}

	export enum TargetFlags
	{
		DOTA_UNIT_TARGET_FLAG_NONE = 0,
		DOTA_UNIT_TARGET_FLAG_RANGED_ONLY = 2,
		DOTA_UNIT_TARGET_FLAG_MELEE_ONLY = 4,
		DOTA_UNIT_TARGET_FLAG_DEAD = 8,
		DOTA_UNIT_TARGET_FLAG_MAGIC_IMMUNE_ENEMIES = 16,
		DOTA_UNIT_TARGET_FLAG_NOT_MAGIC_IMMUNE_ALLIES = 32,
		DOTA_UNIT_TARGET_FLAG_INVULNERABLE = 64,
		DOTA_UNIT_TARGET_FLAG_FOW_VISIBLE = 128,
		DOTA_UNIT_TARGET_FLAG_NO_INVIS = 256,
		DOTA_UNIT_TARGET_FLAG_NOT_ANCIENTS = 512,
		DOTA_UNIT_TARGET_FLAG_PLAYER_CONTROLLED = 1024,
		DOTA_UNIT_TARGET_FLAG_NOT_DOMINATED = 2048,
		DOTA_UNIT_TARGET_FLAG_NOT_SUMMONED = 4096,
		DOTA_UNIT_TARGET_FLAG_NOT_ILLUSIONS = 8192,
		DOTA_UNIT_TARGET_FLAG_NOT_ATTACK_IMMUNE = 16384,
		DOTA_UNIT_TARGET_FLAG_MANA_ONLY = 32768,
		DOTA_UNIT_TARGET_FLAG_CHECK_DISABLE_HELP = 65536,
		DOTA_UNIT_TARGET_FLAG_NOT_CREEP_HERO = 131072,
		DOTA_UNIT_TARGET_FLAG_OUT_OF_WORLD = 262144,
		DOTA_UNIT_TARGET_FLAG_NOT_NIGHTMARED = 524288,
		DOTA_UNIT_TARGET_FLAG_PREFER_ENEMIES = 1048576,
		DOTA_UNIT_TARGET_FLAG_RESPECT_OBSTRUCTIONS = 2097152
	}

	export enum DamageTypes
	{
		DAMAGE_TYPE_NONE = 0,
		DAMAGE_TYPE_PHYSICAL = 1,
		DAMAGE_TYPE_MAGICAL = 2,
		DAMAGE_TYPE_PURE = 3,
		DAMAGE_TYPE_ALL = 7,
		DAMAGE_TYPE_HP_REMOVAL = 8,
		DAMAGE_TYPE_ABILITY_DEFINED = 22
	}

	export enum ImmunityTypes
	{
		SPELL_IMMUNITY_NONE = 0,
		SPELL_IMMUNITY_ALLIES_YES = 1,
		SPELL_IMMUNITY_ALLIES_NO = 2,
		SPELL_IMMUNITY_ENEMIES_YES = 3,
		SPELL_IMMUNITY_ENEMIES_NO = 4
	}

	export enum DispellableTypes
	{
		SPELL_DISPELLABLE_NONE = 0,
		SPELL_DISPELLABLE_YES_STRONG = 1,
		SPELL_DISPELLABLE_YES = 2,
		SPELL_DISPELLABLE_NO = 3
	}

	// Rune

	export enum RuneType
	{
		DOTA_RUNE_INVALID = -1,
		DOTA_RUNE_DOUBLEDAMAGE = 0,
		DOTA_RUNE_HASTE = 1,
		DOTA_RUNE_ILLUSION = 2,
		DOTA_RUNE_INVISIBILITY = 3,
		DOTA_RUNE_REGENERATION = 4,
		DOTA_RUNE_BOUNTY = 5,
		DOTA_RUNE_ARCANE = 6,
		DOTA_RUNE_SHIELD = 7,
		DOTA_RUNE_COUNT = 8
	}

	// Minimap

	export enum PingType
	{
		NORMAL = 0,
		DANGER = 1,
		HEADING = 2,
		RETREAT = 3,
		ATTACK = 4,
		ENEMY_VISION = 5,
		OWN_VISION = 6
	}

	// etc

	export enum GridNavCellFlags
	{
		Walkable = 1,
		Tree = 2,
		MovementBlocker = 4,
		InteractionBlocker = 16,
		GridFlagObstacle = 128
	}

	export enum CloudType
	{
		HERO = 0,
		WARD = 1,
		CREEP = 2,
		TELEPORT = 3,
		SMOKE = 4,
		MAPHACK_HEROES = 5,
		GAME_INFO = 6,
		TECHIES_MINES = 7,
		TOWERS = 8,
		CREEPS = 9,
		TREES = 10,
		RUNES = 11,
		ROSHAN_INFO = 12
	}

	export enum DOTA_CHAT_MESSAGE
	{
		CHAT_MESSAGE_INVALID = -1,
		CHAT_MESSAGE_HERO_KILL = 0,
		CHAT_MESSAGE_HERO_DENY = 1,
		CHAT_MESSAGE_BARRACKS_KILL = 2,
		CHAT_MESSAGE_TOWER_KILL = 3,
		CHAT_MESSAGE_TOWER_DENY = 4,
		CHAT_MESSAGE_FIRSTBLOOD = 5,
		CHAT_MESSAGE_STREAK_KILL = 6,
		CHAT_MESSAGE_BUYBACK = 7,
		CHAT_MESSAGE_AEGIS = 8,
		CHAT_MESSAGE_ROSHAN_KILL = 9,
		CHAT_MESSAGE_COURIER_LOST = 10,
		CHAT_MESSAGE_COURIER_RESPAWNED = 11,
		CHAT_MESSAGE_GLYPH_USED = 12,
		CHAT_MESSAGE_ITEM_PURCHASE = 13,
		CHAT_MESSAGE_CONNECT = 14,
		CHAT_MESSAGE_DISCONNECT = 15,
		CHAT_MESSAGE_DISCONNECT_WAIT_FOR_RECONNECT = 16,
		CHAT_MESSAGE_DISCONNECT_TIME_REMAINING = 17,
		CHAT_MESSAGE_DISCONNECT_TIME_REMAINING_PLURAL = 18,
		CHAT_MESSAGE_RECONNECT = 19,
		CHAT_MESSAGE_PLAYER_LEFT = 20,
		CHAT_MESSAGE_SAFE_TO_LEAVE = 21,
		CHAT_MESSAGE_RUNE_PICKUP = 22,
		CHAT_MESSAGE_RUNE_BOTTLE = 23,
		CHAT_MESSAGE_RUNE_DENY = 114,
		CHAT_MESSAGE_INTHEBAG = 24,
		CHAT_MESSAGE_SECRETSHOP = 25,
		CHAT_MESSAGE_ITEM_AUTOPURCHASED = 26,
		CHAT_MESSAGE_ITEMS_COMBINED = 27,
		CHAT_MESSAGE_SUPER_CREEPS = 28,
		CHAT_MESSAGE_CANT_USE_ACTION_ITEM = 29,
		CHAT_MESSAGE_CANTPAUSE = 31,
		CHAT_MESSAGE_NOPAUSESLEFT = 32,
		CHAT_MESSAGE_CANTPAUSEYET = 33,
		CHAT_MESSAGE_PAUSED = 34,
		CHAT_MESSAGE_UNPAUSE_COUNTDOWN = 35,
		CHAT_MESSAGE_UNPAUSED = 36,
		CHAT_MESSAGE_AUTO_UNPAUSED = 37,
		CHAT_MESSAGE_YOUPAUSED = 38,
		CHAT_MESSAGE_CANTUNPAUSETEAM = 39,
		CHAT_MESSAGE_VOICE_TEXT_BANNED = 41,
		CHAT_MESSAGE_SPECTATORS_WATCHING_THIS_GAME = 42,
		CHAT_MESSAGE_REPORT_REMINDER = 43,
		CHAT_MESSAGE_ECON_ITEM = 44,
		CHAT_MESSAGE_TAUNT = 45,
		CHAT_MESSAGE_RANDOM = 46,
		CHAT_MESSAGE_RD_TURN = 47,
		CHAT_MESSAGE_DROP_RATE_BONUS = 49,
		CHAT_MESSAGE_NO_BATTLE_POINTS = 50,
		CHAT_MESSAGE_DENIED_AEGIS = 51,
		CHAT_MESSAGE_INFORMATIONAL = 52,
		CHAT_MESSAGE_AEGIS_STOLEN = 53,
		CHAT_MESSAGE_ROSHAN_CANDY = 54,
		CHAT_MESSAGE_ITEM_GIFTED = 55,
		CHAT_MESSAGE_HERO_KILL_WITH_GREEVIL = 56,
		CHAT_MESSAGE_HOLDOUT_TOWER_DESTROYED = 57,
		CHAT_MESSAGE_HOLDOUT_WALL_DESTROYED = 58,
		CHAT_MESSAGE_HOLDOUT_WALL_FINISHED = 59,
		CHAT_MESSAGE_PLAYER_LEFT_LIMITED_HERO = 62,
		CHAT_MESSAGE_ABANDON_LIMITED_HERO_EXPLANATION = 63,
		CHAT_MESSAGE_DISCONNECT_LIMITED_HERO = 64,
		CHAT_MESSAGE_LOW_PRIORITY_COMPLETED_EXPLANATION = 65,
		CHAT_MESSAGE_RECRUITMENT_DROP_RATE_BONUS = 66,
		CHAT_MESSAGE_FROSTIVUS_SHINING_BOOSTER_ACTIVE = 67,
		CHAT_MESSAGE_PLAYER_LEFT_AFK = 73,
		CHAT_MESSAGE_PLAYER_LEFT_DISCONNECTED_TOO_LONG = 74,
		CHAT_MESSAGE_PLAYER_ABANDONED = 75,
		CHAT_MESSAGE_PLAYER_ABANDONED_AFK = 76,
		CHAT_MESSAGE_PLAYER_ABANDONED_DISCONNECTED_TOO_LONG = 77,
		CHAT_MESSAGE_WILL_NOT_BE_SCORED = 78,
		CHAT_MESSAGE_WILL_NOT_BE_SCORED_RANKED = 79,
		CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK = 80,
		CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK_RANKED = 81,
		CHAT_MESSAGE_CAN_QUIT_WITHOUT_ABANDON = 82,
		CHAT_MESSAGE_RANKED_GAME_STILL_SCORED_LEAVERS_GET_LOSS = 83,
		CHAT_MESSAGE_ABANDON_RANKED_BEFORE_FIRST_BLOOD_PARTY = 84,
		CHAT_MESSAGE_COMPENDIUM_LEVEL = 85,
		CHAT_MESSAGE_VICTORY_PREDICTION_STREAK = 86,
		CHAT_MESSAGE_ASSASSIN_ANNOUNCE = 87,
		CHAT_MESSAGE_ASSASSIN_SUCCESS = 88,
		CHAT_MESSAGE_ASSASSIN_DENIED = 89,
		CHAT_MESSAGE_VICTORY_PREDICTION_SINGLE_USER_CONFIRM = 90,
		CHAT_MESSAGE_EFFIGY_KILL = 91,
		CHAT_MESSAGE_VOICE_TEXT_BANNED_OVERFLOW = 92,
		CHAT_MESSAGE_YEAR_BEAST_KILLED = 93,
		CHAT_MESSAGE_PAUSE_COUNTDOWN = 94,
		CHAT_MESSAGE_COINS_WAGERED = 95,
		CHAT_MESSAGE_HERO_NOMINATED_BAN = 96,
		CHAT_MESSAGE_HERO_BANNED = 97,
		CHAT_MESSAGE_HERO_BAN_COUNT = 98,
		CHAT_MESSAGE_RIVER_PAINTED = 99,
		CHAT_MESSAGE_SCAN_USED = 100,
		CHAT_MESSAGE_SHRINE_KILLED = 101,
		CHAT_MESSAGE_WAGER_TOKEN_SPENT = 102,
		CHAT_MESSAGE_RANK_WAGER = 103,
		CHAT_MESSAGE_NEW_PLAYER_REMINDER = 104,
		CHAT_MESSAGE_OBSERVER_WARD_KILLED = 105,
		CHAT_MESSAGE_SENTRY_WARD_KILLED = 106,
		CHAT_MESSAGE_ITEM_PLACED_IN_NEUTRAL_STASH = 107,
		CHAT_MESSAGE_HERO_CHOICE_INVALID = 108,
		CHAT_MESSAGE_BOUNTY = 109,
		CHAT_MESSAGE_ABILITY_DRAFT_START = 110,
		CHAT_MESSAGE_HERO_FOUND_CANDY = 111,
		CHAT_MESSAGE_ABILITY_DRAFT_RANDOMED = 112,
		CHAT_MESSAGE_PRIVATE_COACH_CONNECTED = 113,
		CHAT_MESSAGE_CANT_PAUSE_TOO_EARLY = 115,
		CHAT_MESSAGE_HERO_KILL_WITH_PENGUIN = 116
	}

	export enum OverheadAlert
	{
		OVERHEAD_ALERT_GOLD = 0,
		OVERHEAD_ALERT_DENY = 1,
		OVERHEAD_ALERT_CRITICAL = 2,
		OVERHEAD_ALERT_XP = 3,
		OVERHEAD_ALERT_BONUS_SPELL_DAMAGE = 4,
		OVERHEAD_ALERT_MISS = 5,
		OVERHEAD_ALERT_DAMAGE = 6,
		OVERHEAD_ALERT_EVADE = 7,
		OVERHEAD_ALERT_BLOCK = 8,
		OVERHEAD_ALERT_BONUS_POISON_DAMAGE = 9,
		OVERHEAD_ALERT_HEAL = 10,
		OVERHEAD_ALERT_MANA_ADD = 11,
		OVERHEAD_ALERT_MANA_LOSS = 12,
		OVERHEAD_ALERT_LAST_HIT_EARLY = 13,
		OVERHEAD_ALERT_LAST_HIT_CLOSE = 14,
		OVERHEAD_ALERT_LAST_HIT_MISS = 15,
		OVERHEAD_ALERT_MAGICAL_BLOCK = 16,
		OVERHEAD_ALERT_INCOMING_DAMAGE = 17,
		OVERHEAD_ALERT_OUTGOING_DAMAGE = 18,
		OVERHEAD_ALERT_DISABLE_RESIST = 19,
		OVERHEAD_ALERT_DEATH = 20,
		OVERHEAD_ALERT_BLOCKED = 21,
		OVERHEAD_ALERT_ITEM_RECEIVED = 22,
		OVERHEAD_ALERT_SHARD = 23,
		OVERHEAD_ALERT_DEADLY_BLOW = 24
	}

	export enum ProtobufBehavior
	{
		None = 0,
		Ignore = 1,
		Modify = 2
	}

	enum BlendStateBlend
	{
		ZERO = 1,
		ONE = 2,
		SRC_COLOR = 3,
		INV_SRC_COLOR = 4,
		SRC_ALPHA = 5,
		INV_SRC_ALPHA = 6,
		DEST_ALPHA = 7,
		INV_DEST_ALPHA = 8,
		DEST_COLOR = 9,
		INV_DEST_COLOR = 10,
		SRC_ALPHA_SAT = 11,
		BLEND_FACTOR = 14,
		INV_BLEND_FACTOR = 15,
		SRC1_COLOR = 16,
		INV_SRC1_COLOR = 17,
		SRC1_ALPHA = 18,
		INV_SRC1_ALPHA = 19
	}

	enum BlendStateBlendOp
	{
		ADD = 1,
		SUBTRACT = 2,
		REV_SUBTRACT = 3,
		MIN = 4,
		MAX = 5
	}
}